{"ast":null,"code":"var _jsxFileName = \"/Users/taikiyamashita/Desktop/175_AI_Project/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction checkWinner(board) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let [a, b, c] of lines) {\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n  return null;\n}\nfunction App() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState('X');\n  const [winner, setWinner] = useState(null);\n  const handleClick = async i => {\n    if (board[i] || turn !== 'X' || winner) return;\n    const newBoard = [...board];\n    newBoard[i] = 'X';\n    setBoard(newBoard);\n    const newWinner = checkWinner(newBoard);\n    if (newWinner) {\n      setWinner(newWinner);\n      return;\n    }\n    setTurn('O');\n    const state = newBoard.map(cell => cell || '-').join('');\n    try {\n      const res = await fetch('http://127.0.0.1:5000/api/next-move', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          state\n        })\n      });\n      if (!res.ok) {\n        setTurn('X');\n        return;\n      }\n      const data = await res.json();\n      if (data.move !== undefined) {\n        newBoard[data.move] = 'O';\n        setBoard([...newBoard]);\n        const finalWinner = checkWinner(newBoard);\n        if (finalWinner) {\n          setWinner(finalWinner);\n        } else {\n          setTurn('X');\n        }\n      }\n    } catch (err) {\n      alert(\"Server error. Try again.\");\n      setTurn('X');\n    }\n  };\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setTurn('X');\n    setWinner(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic-Tac-Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), winner ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [winner, \" wins!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Turn: \", turn]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((cell, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(i),\n        disabled: cell || winner,\n        children: cell\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"restart-button\",\n      onClick: resetGame,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PI7u28g8XD6wSqrg8eTramY1qMA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","checkWinner","board","lines","a","b","c","App","_s","setBoard","Array","fill","turn","setTurn","winner","setWinner","handleClick","i","newBoard","newWinner","state","map","cell","join","res","fetch","method","headers","body","JSON","stringify","ok","data","json","move","undefined","finalWinner","err","alert","resetGame","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/taikiyamashita/Desktop/175_AI_Project/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction checkWinner(board) {\n  const lines = [\n    [0,1,2],[3,4,5],[6,7,8],\n    [0,3,6],[1,4,7],[2,5,8],\n    [0,4,8],[2,4,6],\n  ];\n  for (let [a,b,c] of lines) {\n    if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n      return board[a];\n    }\n  }\n  return null;\n}\n\nfunction App() {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [turn, setTurn] = useState('X');\n  const [winner, setWinner] = useState(null);\n\n  const handleClick = async (i) => {\n    if (board[i] || turn !== 'X' || winner) return;\n\n    const newBoard = [...board];\n    newBoard[i] = 'X';\n    setBoard(newBoard);\n\n    const newWinner = checkWinner(newBoard);\n    if (newWinner) {\n      setWinner(newWinner);\n      return;\n    }\n\n    setTurn('O');\n\n    const state = newBoard.map(cell => cell || '-').join('');\n\n    try {\n      const res = await fetch('http://127.0.0.1:5000/api/next-move', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ state })\n      });\n\n      if (!res.ok) {\n        setTurn('X');\n        return;\n      }\n\n      const data = await res.json();\n      if (data.move !== undefined) {\n        newBoard[data.move] = 'O';\n        setBoard([...newBoard]);\n\n        const finalWinner = checkWinner(newBoard);\n        if (finalWinner) {\n          setWinner(finalWinner);\n        } else {\n          setTurn('X');\n        }\n      }\n    } catch (err) {\n      alert(\"Server error. Try again.\");\n      setTurn('X');\n    }\n  };\n\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setTurn('X');\n    setWinner(null);\n  };\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>Tic-Tac-Toe</h1>\n      {winner ? (\n        <h2>{winner} wins!</h2>\n      ) : (\n        <h2>Turn: {turn}</h2>\n      )}\n      <div className=\"board\">\n        {board.map((cell, i) => (\n          <button key={i} onClick={() => handleClick(i)} disabled={cell || winner}>\n            {cell}\n          </button>\n        ))}\n      </div>\n      <button className=\"restart-button\" onClick={resetGame}>Restart</button>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,MAAMC,KAAK,GAAG,CACZ,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACvB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EACvB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAChB;EACD,KAAK,IAAI,CAACC,CAAC,EAACC,CAAC,EAACC,CAAC,CAAC,IAAIH,KAAK,EAAE;IACzB,IAAID,KAAK,CAACE,CAAC,CAAC,IAAIF,KAAK,CAACE,CAAC,CAAC,KAAKF,KAAK,CAACG,CAAC,CAAC,IAAIH,KAAK,CAACE,CAAC,CAAC,KAAKF,KAAK,CAACI,CAAC,CAAC,EAAE;MAC9D,OAAOJ,KAAK,CAACE,CAAC,CAAC;IACjB;EACF;EACA,OAAO,IAAI;AACb;AAEA,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGX,QAAQ,CAACY,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC;EACrC,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMkB,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/B,IAAIf,KAAK,CAACe,CAAC,CAAC,IAAIL,IAAI,KAAK,GAAG,IAAIE,MAAM,EAAE;IAExC,MAAMI,QAAQ,GAAG,CAAC,GAAGhB,KAAK,CAAC;IAC3BgB,QAAQ,CAACD,CAAC,CAAC,GAAG,GAAG;IACjBR,QAAQ,CAACS,QAAQ,CAAC;IAElB,MAAMC,SAAS,GAAGlB,WAAW,CAACiB,QAAQ,CAAC;IACvC,IAAIC,SAAS,EAAE;MACbJ,SAAS,CAACI,SAAS,CAAC;MACpB;IACF;IAEAN,OAAO,CAAC,GAAG,CAAC;IAEZ,MAAMO,KAAK,GAAGF,QAAQ,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,IAAI,GAAG,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;IAExD,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV;QAAM,CAAC;MAChC,CAAC,CAAC;MAEF,IAAI,CAACI,GAAG,CAACO,EAAE,EAAE;QACXlB,OAAO,CAAC,GAAG,CAAC;QACZ;MACF;MAEA,MAAMmB,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACE,IAAI,KAAKC,SAAS,EAAE;QAC3BjB,QAAQ,CAACc,IAAI,CAACE,IAAI,CAAC,GAAG,GAAG;QACzBzB,QAAQ,CAAC,CAAC,GAAGS,QAAQ,CAAC,CAAC;QAEvB,MAAMkB,WAAW,GAAGnC,WAAW,CAACiB,QAAQ,CAAC;QACzC,IAAIkB,WAAW,EAAE;UACfrB,SAAS,CAACqB,WAAW,CAAC;QACxB,CAAC,MAAM;UACLvB,OAAO,CAAC,GAAG,CAAC;QACd;MACF;IACF,CAAC,CAAC,OAAOwB,GAAG,EAAE;MACZC,KAAK,CAAC,0BAA0B,CAAC;MACjCzB,OAAO,CAAC,GAAG,CAAC;IACd;EACF,CAAC;EAED,MAAM0B,SAAS,GAAGA,CAAA,KAAM;IACtB9B,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7BE,OAAO,CAAC,GAAG,CAAC;IACZE,SAAS,CAAC,IAAI,CAAC;EACjB,CAAC;EAED,oBACEf,OAAA;IAAKwC,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClC1C,OAAA;MAAA0C,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBhC,MAAM,gBACLd,OAAA;MAAA0C,QAAA,GAAK5B,MAAM,EAAC,QAAM;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEvB9C,OAAA;MAAA0C,QAAA,GAAI,QAAM,EAAC9B,IAAI;IAAA;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACrB,eACD9C,OAAA;MAAK+C,SAAS,EAAC,OAAO;MAAAL,QAAA,EACnBxC,KAAK,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEL,CAAC,kBACjBjB,OAAA;QAAgBgD,OAAO,EAAEA,CAAA,KAAMhC,WAAW,CAACC,CAAC,CAAE;QAACgC,QAAQ,EAAE3B,IAAI,IAAIR,MAAO;QAAA4B,QAAA,EACrEpB;MAAI,GADML,CAAC;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEN,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9C,OAAA;MAAQ+C,SAAS,EAAC,gBAAgB;MAACC,OAAO,EAAET,SAAU;MAAAG,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpE,CAAC;AAEV;AAACtC,EAAA,CA7EQD,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AA+EZ,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}